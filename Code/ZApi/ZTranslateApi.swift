//
//  ZTranslateApi.swift
//  ZApi
//
//  Created by three stone Áéã on 2020/3/16.
//  Copyright ¬© 2020 three stone Áéã. All rights reserved.
//

import Foundation
import WLReqKit
import Alamofire

@objc (ZTranslateStyle)
public enum ZTranslateStyle: Int {
    
    case id // üáÆüá© Âç∞Â∞ºËØ≠
    
    case ko // üá∞üá∑ Èü©ËØ≠
    
    case it // üáÆüáπ ÊÑèÂ§ßÂà©ËØ≠
    
    case fr // üá´üá∑ Ê≥ïËØ≠
    
    case es // üá™üá∏ Ë•øÁè≠ÁâôËØ≠
    
    case ja // üáØüáµ Êó•ËØ≠
    
    case sv // üá∏üá™ ÁëûÂÖ∏ËØ≠
    
    case th // üáπüá≠ Ê≥∞ËØ≠
}

extension ZTranslateStyle {
    
    public var title: String {
        
        switch self {
        case .id: return "id"
            
        case .ko: return "ko"
            
        case .it: return "it"
            
        case .fr: return "fr"
            
        case .es: return "es"
            
        case .ja: return "ja"
            
        case .sv: return "sv"
            
        case .th: return "th"
        }
    }
}
public enum ZTranslateApi {
    
    case translateFromCNToKO(_ text: String ) // Èü©ËØ≠-> ‰∏≠Êñá
    
    case translateFromKOToCN(_ text: String ) // ‰∏≠Êñá -> Èü©ËØ≠
    
    case translateFromTerToCN(_ text: String ) // Âç∞Â∞ºËØ≠-> ‰∏≠Êñá
    
    case translateFromCNToTer(_ text: String) // ‰∏≠Êñá -> Âç∞Â∞ºËØ≠
    
    case translateFromCNTo(_ text: String ,style: ZTranslateStyle)
    
    case translateToCN(_ text: String ,style: ZTranslateStyle)
}

extension ZTranslateApi: WLObserverReq {
    
    public var host: String { return "" }
    
    public var reqName: String {
        
        return ""
    }
    
    public var params: Dictionary<String, Any> {
        
        switch self {
            
        case .translateToCN(let text, style: let style): return ["from":style.title,"to":"zh-cn","text":text]
            
        case .translateFromCNTo(let text, style: let style): return ["from":"zh-cn","to":style.title,"text":text]
            
        default: return [:]
        }
    }
    
    public var headers: Dictionary<String, String> {
        
        return [:]
    }
    
    public var method: HTTPMethod {
        
        return .post
    }
}
